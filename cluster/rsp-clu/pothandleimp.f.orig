c***********************************************************************
c Now, the radial mesh of the potential within a layer is chosen as the 
c finest grid between both CPA species.
c
c For bulk calculation, assumed: ninprcl=ninprcr=ninprc(1)  &  nprc=1 
c***********************************************************************
      subroutine pothandleimp(
     > lmax,nintfc,v00,ivacpot,for006,opot,laypot,dx,ns,rs,idpota,
     > vra,bra,bopra,za)
c
c -read Left,Right and Layer potentials
c
      implicit real*8 (a-h,o-z)
c
      include '../param.h'
      integer mmax
      parameter (mmax=mimp)
c
      logical opot
      logical oldpot
      character*10 idpot0
      character*10 idpota(mmax)
      character*30 laypot
      character*30 for006
c
      real*8 vra(nrad,mmax)
      real*8 bra(nrad,mmax)
      real*8 bopra(nrad,2,mmax)
      real*8 dx(mmax)
      real*8 rs(mmax)
      real*8 za(mmax)
c
      integer isigba(mmax)
      integer ns(mmax)
c
      complex*16 qmom(lmsup)
c
      real*8 potshift
      real*8 b0
c
      integer layshift1
      integer layshift2
      integer layb0
      integer layb0f
      integer ib0
      integer isigba
c
      data tiny/1.0d-6/
c
      lmaxs=2*lmax
      lmmaxs=(lmaxs+1)*(lmaxs+1)
c
      imom=0
c -- rsl/~r is the Wigner-Seitz radius for the left and right bulk and
c    rs(i),i=1,nintfc is the WS-radius for the interface !!
c
c     if(bulk) then
c       imom=1
c       goto 100
c     end if
c
c     write(6,*) 'leftpot=',leftpot
c     open(20,file=leftpot,status='old')
c     read(20,*)
c     do li=1,ninprcl
c       call readpot(idpot0,conc0,lmax,qmomla(1,li),
c    >     vrla(1,li),brla(1,li),boprla(1,1,li),
c    >     opotl,dxl(li),nsl(li),rsl(li),zla(li),
c    >     for006,1)
c       if(igraph.lt.0) then
c         if(dabs(conc0-concl(li)).gt.tiny) stop
c    &       'Conc in input_geo and leftpot differ'
c       endif
c       concl(li) = conc0
c       idpotla(li)=idpot0
c       cpalay=1.d0-concl(li).gt.tiny
c       if(cpalay) then
c         dummy = 1.d0-concl(li)
c         call readpot(idpot0,dummy,lmax,qmomlb(1,li),
c    >             vrlb(1,li),brlb(1,li),boprlb(1,1,li),
c    >             opotl,dx1,ns1,rsl(li),zlb(li),
c    >             for006,1)
c         idpotlb(li)=idpot0
c         if((dabs(dx1-dxl(li)).gt.tiny).or.(ns1.ne.nsl(li))) then
c           write(*,*) 
c    &      ' WARNING - POTHANDLE: radial grid mismatch in layer ',li
c           ns0 = max(ns1,nsl(li))
c           dx0 = min(dx1,dxl(li))
c           call interpot(nsl(li),dxl(li),ns0,dx0,zla(li),rsl(li),
c    >                    vrla(1,li),
c    >                    brla(1,li),boprla(1,1,li),opotl)
c           call interpot(ns1,dx1,ns0,dx0,zlb(li),rsl(li),vrlb(1,li),
c    >                    brlb(1,li),boprlb(1,1,li),opotl)
c           nsl(li) = ns0
c           dxl(li) = dx0
c         endif
c       else
c         idpotlb(li)=idpotla(li)
c         zlb(li)=zla(li)
c         do i=1,lmmaxs
c            qmomlb(i,li)=qmomla(i,li)
c         end do
c         do i=1,nsl(li)
c           vrlb(i,li)=vrla(i,li)
c           brlb(i,li)=brla(i,li)
c           boprlb(i,1,li)=boprla(i,1,li)
c           boprlb(i,2,li)=boprla(i,2,li)
c         end do
c       end if
c       write(6,'(i4,2x,a3,''('',f5.3,'') - '',a3,''('',f5.3,'')'')')
c    >  li,idpotla(li)(1:3),concl(li),idpotlb(li)(1:3),1.d0-concl(li)
c       call flush(6)
c     enddo
c     close(20)
c
c     if(linbw) then
c       write(6,*) 'rightpot'
c       do li=1,ninprcr
c         idpotra(li)=idpotla(li)
c         idpotrb(li)=idpotlb(li)
c         zra(li)=zla(li)
c         zrb(li)=zlb(li)
c         nsr(li)=nsl(li)
c         dxr(li)=dxl(li)
c         rsr(li)=rsl(li)
c         concr(li)=concl(li)
c         do i=1,nsl(li)
c           vrra(i,li)=vrla(i,li)
c           vrrb(i,li)=vrlb(i,li)
c           brra(i,li)=brla(i,li)
c           brrb(i,li)=brlb(i,li)
c           boprra(i,1,li)=boprla(i,1,li)
c           boprra(i,2,li)=boprla(i,2,li)
c           boprrb(i,1,li)=boprlb(i,1,li)
c           boprrb(i,2,li)=boprlb(i,2,li)
c         end do
c         write(6,'(i4,2x,a3,''('',f5.3,'') - '',a3,''('',f5.3,'')'')')
c    >    li,idpotra(li)(1:3),concr(li),idpotrb(li)(1:3),1.d0-concr(li)
c         call flush(6)
c       end do
c       write(6,*) 'laypot'
c       do li=1,nintfc
c         lli=li-((li-1)/ninprcl)*ninprcl
c         idpota(li)=idpotla(lli)
c         idpotb(li)=idpotlb(lli)
c         za(li)=zla(lli)
c         zb(li)=zlb(lli)
c         ns(li)=nsl(lli)
c         dx(li)=dxl(lli)
c         rs(li)=rsl(lli)
c         conc(li)=concl(lli)
c         do i=1,ns(li)
c           vra(i,li)=vrla(i,lli)
c           vrb(i,li)=vrlb(i,lli)
c           bra(i,li)=brla(i,lli)
c           brb(i,li)=brlb(i,lli)
c           bopra(i,1,li)=boprla(i,1,lli)
c           bopra(i,2,li)=boprla(i,2,lli)
c           boprb(i,1,li)=boprlb(i,1,lli)
c           boprb(i,2,li)=boprlb(i,2,lli)
c         end do
c         write(6,'(i4,2x,a3,''('',f5.3,'') - '',a3,''('',f5.3,'')'')')
c    >    li,idpota(li)(1:3),conc(li),idpotb(li)(1:3),1.d0-conc(li)
c         call flush(6)
c       end do
c       return
c     end if
c     if(rightm.eq.'V') then
c       write(6,*) 'rightpot=  Vacuum' 
c       do li=1,ninprcr
c         concr(li)=1.d0
c         rsr(li)=rsl(li)
c         nsr(li)=nsl(li)
c         dxr(li)=dxl(li)
c         idpotra(li)='Vacuum    '
c         zra(li)=0.d0
c         idpotrb(li)='Vacuum    '
c         zrb(li)=0.d0
c         write(6,'(2x,a3,''('',f5.3,'') - '',a3,''('',f5.3,'')'')')
c    >    idpotra(li)(1:3),concr(li),idpotrb(li)(1:3),1.d0-concr(li)
c       enddo
c     else
c       write(6,*) 'rightpot=',rightpot
c       open(20,file=rightpot,status='old')
c       read(20,*)
c       do li=1,ninprcr
c         call readpot(idpot0,conc0,lmax,qmomra(1,li),
c    >      vrra(1,li),brra(1,li),boprra(1,1,li),
c    >      opotr,dxr(li),nsr(li),rsr(li),zra(li),
c    >      for006,1)
c         if(igraph.lt.0.) then
c           if(dabs(conc0-concr(li)).gt.tiny) stop
c    &                 'Conc in input_geo and rightpot differ'
c         endif
c         concr(li) = conc0
c         idpotra(li)=idpot0
c         cpalay=1.d0-concr(li).gt.tiny
c         if(cpalay) then
c           dummy = 1.d0-concr(li)
c           call readpot(idpot0,dummy,lmax,qmomrb(1,li),
c    >              vrrb(1,li),brrb(1,li),boprrb(1,1,li),
c    >              opotr,dx1,ns1,rsr(li),zrb(li),
c    >              for006,1)
c           idpotrb(li)=idpot0
c           if((dabs(dx1-dxr(li)).gt.tiny).or.(ns1.ne.nsr(li))) then
c             write(*,*) 
c    &        ' WARNING - POTHANDLE: radial grid mismatch in layer ',li
c             ns0 = max(ns1,nsr(li))
c             dx0 = min(dx1,dxr(li))
c             call interpot(nsr(li),dxr(li),ns0,dx0,zra(li),rsr(li),
c    >                      vrra(1,li),brra(1,li),boprra(1,1,li),opotr)
c             call interpot(ns1,dx1,ns0,dx0,zrb(li),rsr(li),vrrb(1,li),
c    >                      brrb(1,li),boprrb(1,1,li),opotr)
c             nsr(li) = ns0
c             dxr(li) = dx0
c           endif
c         else
c           idpotrb(li)=idpotra(li)
c           zrb(li)=zra(li)
c           do i=1,lmmaxs
c             qmomrb(i,li)=qmomra(i,li)
c           end do
c           do i=1,nsr(li)
c             vrrb(i,li)=vrra(i,li)
c             brrb(i,li)=brra(i,li)
c             boprrb(i,1,li)=boprra(i,1,li)
c             boprrb(i,2,li)=boprra(i,2,li)
c           end do
c         end if
c         write(6,'(2x,a3,''('',f5.3,'') - '',a3,''('',f5.3,'')'')')
c    >    idpotra(li)(1:3),concr(li),idpotrb(li)(1:3),1.d0-concr(li)
c       enddo
c       close(20)
c     end if
c
c
c 100 continue
      open(20,file=laypot,status='old')
      read(20,*)
      write(6,*) 'imppot=',laypot
      do li=1,nintfc
        call readpot(idpot0,conc0,lmax,qmom,vra(1,li),bra(1,li),
     >       bopra(1,1,li),opot,dx(li),ns(li),rs(li),za(li),
     >       for006,imom)
c       if(igraph.lt.0) then
c         if(dabs(conc0-conc(li)).gt.tiny) stop
c    &               'Conc in input_geo and laypot differ'
c       endif
c       conc(li) = conc0
        idpota(li)=idpot0
c
c       if((li.ge.layshift1).and.(li.le.layshift2)) then
c         x=dlog(rs(li))-(ns(li)-1)*dx(li)
c         do i=1,ns(li)
c           r=dexp(x)
c           vra(i,li)=vra(i,li)+potshift*r
c           x=x+dx(li)
c         end do
c       end if
c
c       if(idpot0(1:3).eq.'Vac'.and.ivacpot.eq.1) then
c         x=dlog(rs(li))-(ns(li)-1)*dx(li)
c         do i=1,ns(li)
c           r=dexp(x)
c           vra(i,li)=v00*r
c           bra(i,li)=0.d0 
c           bopra(i,1,li)=0.d0 
c           bopra(i,2,li)=0.d0 
c           x=x+dx(li)
c         end do
c       end if
c
c       cpalay=1.d0-conc(li).gt.tiny
c       if(cpalay) then
c
c         dummy = 1.d0-conc(li)
c         call readpot(idpot0,dummy,lmax,qmom,vrb(1,li),brb(1,li),
c    >         boprb(1,1,li),opot,dx1,ns1,rs(li),zb(li),
c    >         for006,imom)
c         idpotb(li)=idpot0
c         if((dabs(dx1-dx(li)).gt.tiny).or.(ns1.ne.ns(li))) then
c           write(*,*) 
c    &      ' WARNING - POTHANDLE: radial grid mismatch in layer ',li
c           ns0 = max(ns1,ns(li))
c           dx0 = min(dx1,dx(li))
c           call interpot(ns(li),dx(li),ns0,dx0,za(li),rs(li),
c    >                    vra(1,li),bra(1,li),bopra(1,1,li),opot)
c           call interpot(ns1,dx1,ns0,dx0,zb(li),rs(li),vrb(1,li),
c    >                    brb(1,li),boprb(1,1,li),opot)
c           ns(li) = ns0
c           dx(li) = dx0
c         endif
c
c         if((li.ge.layshift1).and.(li.le.layshift2)) then
c           x=dlog(rs(li))-(ns(li)-1)*dx(li)
c           do i=1,ns(li)
c             r=dexp(x)
c             vrb(i,li)=vrb(i,li)+potshift*r
c             x=x+dx(li)
c           end do
c         end if
c         if(idpotb(li)(1:3).eq.'Vac'.and.ivacpot.eq.1) then
c           x=dlog(rs(li))-(ns(li)-1)*dx(li)
c           do i=1,ns(li)
c             r=dexp(x)
c             vrb(i,li)=v00*r
c             brb(i,li)=0.d0 
c             boprb(i,1,li)=0.d0 
c             boprb(i,2,li)=0.d0 
c             x=x+dx(li)
c           end do
c         end if
c
c       else
c
c         idpotb(li)=idpota(li)
c         zb(li)=za(li)
c         do i=1,ns(li)
c           vrb(i,li)=vra(i,li)
c           brb(i,li)=bra(i,li)
c           boprb(i,1,li)=bopra(i,1,li)
c           boprb(i,2,li)=bopra(i,2,li)
c         end do
c
c       end if
c
        if((layb0.eq.0).or.((li.ge.layb0).and.(li.le.layb0f))) then
          if(ib0.eq.0) then
            x=dlog(rs(li))-(ns(li)-1)*dx(li)
            do i=1,ns(li)
              r=dexp(x)
              bra(i,li)=bra(i,li)+r*b0
c             brb(i,li)=brb(i,li)+r*b0
              x=x+dx(li)
            end do
          else
            x=dlog(rs(li))-(ns(li)-1)*dx(li)
            do i=1,ns(li)
              r=dexp(x)
              bra(i,li)=r*b0
c             brb(i,li)=r*b0
              x=x+dx(li)
            end do
          end if
        end if
c
        if(isigba(li).ne.1) then
          do i=1,ns(li)
            bra(i,li)=-bra(i,li)
          end do
          write(6,'(''<pothandleimp> : Sign of effective 
     >          field changed'')') li
        end if
c       if(isigbb(li).ne.1) then
c         do i=1,ns(li)
c           brb(i,li)=-brb(i,li)
c         end do
c         write(6,'(''  Type B: sign of effective field changed'')')
c       end if
c
        write(6,'(2x,a3)')  idpota(li)(1:3)
      end do
      close(20)
c
c
c     if(.not.bulk) return
c
c limitation to 3D periodicity:
c
c     do li=1,nintfc
c       idpotla(li)=idpota(li)
c       idpotra(li)=idpota(li)
c       idpotlb(li)=idpotb(li)
c       idpotrb(li)=idpotb(li)
c       dxl(li)=dx(li)
c       dxr(li)=dx(li)
c       rsl(li)=rs(li)
c       rsr(li)=rs(li)
c       nsl(li)=ns(li)
c       nsr(li)=ns(li)
c       zla(li)=za(li)
c       zra(li)=za(li)
c       zlb(li)=zb(li)
c       zrb(li)=zb(li)
c       concl(li)=conc(li)
c       concr(li)=conc(li)
c     enddo
c
      return
      end
c===============
      subroutine interpot(ns0,dx0,ns,dx,z,rs,vr,br,bopr,opot)
c
c Interpolate input potential (in grid defined by ns0,dx0) to ns,dx.
c
      implicit real*8 (a-h,o-z)
      include '../param.h'
c
      logical opot
      dimension vr(nrad),br(nrad),bopr(nrad,2)
      dimension vr0(0:nrad),br0(0:nrad),bopr1(0:nrad),bopr2(0:nrad),
     &          rs0(0:nrad)
c
      rs0(0) = 0.d0
      vr0(0) = -2.d0*z
      br0(0) = 0.d0
      bopr1(0) = 0.d0
      bopr2(0) = 0.d0
      do j=1,ns0
        xws=dlog(rs)-(ns0-j)*dx0
        rs0(j)=dexp(xws)
        vr0(j) = vr(j)
        br0(j) = br(j)
        if(opot) then
          bopr1(j) = bopr(j,1)
          bopr2(j) = bopr(j,2)
        endif
      enddo
c
      do j=1,ns
        xws=dlog(rs)-(ns-j)*dx
        rws=dexp(xws)
        vr(j)=ylag(rws,rs0(0),vr0(0),0,3,ns0+1,iex)
        br(j)=ylag(rws,rs0(0),br0(0),0,3,ns0+1,iex)
        if(opot) then
          bopr(j,1)=ylag(rws,rs0(0),bopr1(0),0,3,ns0+1,iex)
          bopr(j,2)=ylag(rws,rs0(0),bopr2(0),0,3,ns0+1,iex)
        endif
      enddo
c
      return
      end
